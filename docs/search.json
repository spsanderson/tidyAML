[{"path":"https://www.spsanderson.com/tidyaml/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with tidyAML","text":"Welcome tidyAML new R package makes easy use tidymodels ecosystem perform automated machine learning (AutoML). package provides simple intuitive interface allows users quickly generate machine learning models without worrying underlying details. also includes safety mechanism ensures package fail gracefully required extension packages installed user’s machine. tidyAML, users can easily build high-quality machine learning models just lines code. Whether beginner experienced machine learning practitioner, tidyAML something offer. ideas able generate regression models fly without actually go process building specification, especially non-tuning model, meaning planing tuning hyper-parameters like penalty cost. idea re-write excellent work tidymodels team done (’s possible) rather try make enhanced easy use set functions say can generate many models predictions . similar great h2o package, , tidyAML require java setup properly like h2o tidyAML built tidymodels.","code":""},{"path":"https://www.spsanderson.com/tidyaml/articles/getting-started.html","id":"thanks","dir":"Articles","previous_headings":"","what":"Thanks","title":"Getting Started with tidyAML","text":"Thank Garrick Aden-Buie easy name change suggestion.","code":""},{"path":"https://www.spsanderson.com/tidyaml/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with tidyAML","text":"can install tidyAML like : development version GitHub","code":"install.packages(\"tidyAML\") # install.packages(\"devtools\")   devtools::install_github(\"spsanderson/tidyAML\")"},{"path":"https://www.spsanderson.com/tidyaml/articles/getting-started.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Getting Started with tidyAML","text":"Part reason use tidyAML can generate many models data set. One way modeling data set using regression numeric output. convienent function tidyAML generate set non-tuning models fast regression. Let’s take look . First let’s load library Now lets see function action. shown can easily select models want either choosing supported parsnip function like linear_reg() choose desired engine, can also use conjunction ! function also add class output. Let’s see . see two added classes, first fst_reg_spec_tbl creates set non-tuning regression models tidyaml_mod_spec_tbl model specification tibble built tidyAML Now, want create non-tuning model spec without using fast_regression_parsnip_spec_tbl() function. Well, can. function called create_model_spec(). Now reason . Let’s take look first function modeling tidyAML, fast_regression(). see , one models gracefully failed, thanks part function purrr::safely(), used make call safe_make functions. Let’s look fitted workflow predictions.","code":"library(tidyAML) #> Loading required package: parsnip #> Warning: package 'parsnip' was built under R version 4.2.3 #>  #> == Welcome to tidyAML =========================================================================== #> If you find this package useful, please leave a star:  #>    https://github.com/spsanderson/tidyAML' #>  #> If you encounter a bug or want to request an enhancement please file an issue at: #>    https://github.com/spsanderson/tidyAML/issues #>  #> It is suggested that you run tidymodels::tidymodel_prefer() to set the defaults for your session. #>  #> Thank you for using tidyAML! fast_regression_parsnip_spec_tbl(.parsnip_fns = \"linear_reg\") #> # A tibble: 11 × 5 #>    .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>        <int> <chr>           <chr>         <chr>        <list>     #>  1         1 lm              regression    linear_reg   <spec[+]>  #>  2         2 brulee          regression    linear_reg   <spec[+]>  #>  3         3 gee             regression    linear_reg   <spec[+]>  #>  4         4 glm             regression    linear_reg   <spec[+]>  #>  5         5 glmer           regression    linear_reg   <spec[+]>  #>  6         6 glmnet          regression    linear_reg   <spec[+]>  #>  7         7 gls             regression    linear_reg   <spec[+]>  #>  8         8 lme             regression    linear_reg   <spec[+]>  #>  9         9 lmer            regression    linear_reg   <spec[+]>  #> 10        10 stan            regression    linear_reg   <spec[+]>  #> 11        11 stan_glmer      regression    linear_reg   <spec[+]> fast_regression_parsnip_spec_tbl(.parsnip_eng = c(\"lm\",\"glm\")) #> # A tibble: 3 × 5 #>   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>       <int> <chr>           <chr>         <chr>        <list>     #> 1         1 lm              regression    linear_reg   <spec[+]>  #> 2         2 glm             regression    linear_reg   <spec[+]>  #> 3         3 glm             regression    poisson_reg  <spec[+]> fast_regression_parsnip_spec_tbl(.parsnip_eng = c(\"lm\",\"glm\",\"gee\"),                                   .parsnip_fns = \"linear_reg\") #> # A tibble: 3 × 5 #>   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>       <int> <chr>           <chr>         <chr>        <list>     #> 1         1 lm              regression    linear_reg   <spec[+]>  #> 2         2 gee             regression    linear_reg   <spec[+]>  #> 3         3 glm             regression    linear_reg   <spec[+]> class(fast_regression_parsnip_spec_tbl()) #> [1] \"tidyaml_mod_spec_tbl\" \"fst_reg_spec_tbl\"     \"tidyaml_base_tbl\"     #> [4] \"tbl_df\"               \"tbl\"                  \"data.frame\" create_model_spec(  .parsnip_eng = list(\"lm\",\"glm\",\"glmnet\",\"cubist\"),  .parsnip_fns = list(       \"linear_reg\",       \"linear_reg\",       \"linear_reg\",       \"cubist_rules\"      )  ) #> # A tibble: 4 × 4 #>   .parsnip_engine .parsnip_mode .parsnip_fns .model_spec #>   <chr>           <chr>         <chr>        <list>      #> 1 lm              regression    linear_reg   <spec[+]>   #> 2 glm             regression    linear_reg   <spec[+]>   #> 3 glmnet          regression    linear_reg   <spec[+]>   #> 4 cubist          regression    cubist_rules <spec[+]>  create_model_spec(  .parsnip_eng = list(\"lm\",\"glm\",\"glmnet\",\"cubist\"),  .parsnip_fns = list(       \"linear_reg\",       \"linear_reg\",       \"linear_reg\",       \"cubist_rules\"      ),  .return_tibble = FALSE  ) #> $.parsnip_engine #> $.parsnip_engine[[1]] #> [1] \"lm\" #>  #> $.parsnip_engine[[2]] #> [1] \"glm\" #>  #> $.parsnip_engine[[3]] #> [1] \"glmnet\" #>  #> $.parsnip_engine[[4]] #> [1] \"cubist\" #>  #>  #> $.parsnip_mode #> $.parsnip_mode[[1]] #> [1] \"regression\" #>  #>  #> $.parsnip_fns #> $.parsnip_fns[[1]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[2]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[3]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[4]] #> [1] \"cubist_rules\" #>  #>  #> $.model_spec #> $.model_spec[[1]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: lm  #>  #>  #> $.model_spec[[2]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: glm  #>  #>  #> $.model_spec[[3]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: glmnet  #>  #>  #> $.model_spec[[4]] #> ! parsnip could not locate an implementation for `cubist_rules` regression #>   model specifications using the `cubist` engine. #> Cubist Model Specification (regression) #>  #> Computational engine: cubist library(recipes) library(dplyr)  rec_obj <- recipe(mpg ~ ., data = mtcars) frt_tbl <- fast_regression(   .data = mtcars,    .rec_obj = rec_obj,    .parsnip_eng = c(\"lm\",\"glm\"),   .parsnip_fns = \"linear_reg\" )  glimpse(frt_tbl) #> Rows: 2 #> Columns: 8 #> $ .model_id       <int> 1, 2 #> $ .parsnip_engine <chr> \"lm\", \"glm\" #> $ .parsnip_mode   <chr> \"regression\", \"regression\" #> $ .parsnip_fns    <chr> \"linear_reg\", \"linear_reg\" #> $ model_spec      <list> [~NULL, ~NULL, NULL, regression, TRUE, NULL, lm, TRUE]… #> $ wflw            <list> [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp… #> $ fitted_wflw     <list> [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp… #> $ pred_wflw       <list> [<tbl_df[64 x 3]>], [<tbl_df[64 x 3]>] frt_tbl$pred_wflw #> [[1]] #> # A tibble: 64 × 3 #>    .data_category .data_type .value #>    <chr>          <chr>       <dbl> #>  1 actual         actual       21   #>  2 actual         actual       21   #>  3 actual         actual       22.8 #>  4 actual         actual       21.4 #>  5 actual         actual       18.7 #>  6 actual         actual       18.1 #>  7 actual         actual       14.3 #>  8 actual         actual       24.4 #>  9 actual         actual       22.8 #> 10 actual         actual       19.2 #> # ℹ 54 more rows #>  #> [[2]] #> # A tibble: 64 × 3 #>    .data_category .data_type .value #>    <chr>          <chr>       <dbl> #>  1 actual         actual       21   #>  2 actual         actual       21   #>  3 actual         actual       22.8 #>  4 actual         actual       21.4 #>  5 actual         actual       18.7 #>  6 actual         actual       18.1 #>  7 actual         actual       14.3 #>  8 actual         actual       24.4 #>  9 actual         actual       22.8 #> 10 actual         actual       19.2 #> # ℹ 54 more rows"},{"path":"https://www.spsanderson.com/tidyaml/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steven Sanderson. Author, maintainer, copyright holder.","code":""},{"path":"https://www.spsanderson.com/tidyaml/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sanderson S (2023). tidyAML: Automatic Machine Learning 'tidymodels'. R package version 0.0.3.9000, https://github.com/spsanderson/tidyAML.","code":"@Manual{,   title = {tidyAML: Automatic Machine Learning with 'tidymodels'},   author = {Steven Sanderson},   year = {2023},   note = {R package version 0.0.3.9000},   url = {https://github.com/spsanderson/tidyAML}, }"},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Automatic Machine Learning with tidymodels","text":"Welcome tidyAML new R package makes easy use tidymodels ecosystem perform automated machine learning (AutoML). package provides simple intuitive interface allows users quickly generate machine learning models without worrying underlying details. also includes safety mechanism ensures package fail gracefully required extension packages installed user’s machine. tidyAML, users can easily build high-quality machine learning models just lines code. Whether beginner experienced machine learning practitioner, tidyAML something offer. ideas able generate regression models fly without actually go process building specification, especially non-tuning model, meaning planing tuning hyper-parameters like penalty cost. idea re-write excellent work tidymodels team done (’s possible) rather try make enhanced easy use set functions say can generate many models predictions . similar great h2o package, , tidyAML require java setup properly like h2o tidyAML built tidymodels.","code":""},{"path":"https://www.spsanderson.com/tidyaml/index.html","id":"thanks","dir":"","previous_headings":"","what":"Thanks","title":"Automatic Machine Learning with tidymodels","text":"Thank Garrick Aden-Buie easy name change suggestion.","code":""},{"path":"https://www.spsanderson.com/tidyaml/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Machine Learning with tidymodels","text":"can install tidyAML like : development version GitHub","code":"install.packages(\"tidyAML\") #> Installing package into 'C:/Users/steve/AppData/Local/Temp/RtmpWQakJl/temp_libpathbdc7ad15ebc' #> (as 'lib' is unspecified) #> package 'tidyAML' successfully unpacked and MD5 sums checked #>  #> The downloaded binary packages are in #>  C:\\Users\\steve\\AppData\\Local\\Temp\\Rtmps1W5T5\\downloaded_packages # install.packages(\"devtools\") devtools::install_github(\"spsanderson/tidyAML\") #> scales (1.2.1 -> 1.3.0) [CRAN] #> package 'scales' successfully unpacked and MD5 sums checked #>  #> The downloaded binary packages are in #>  C:\\Users\\steve\\AppData\\Local\\Temp\\Rtmps1W5T5\\downloaded_packages #> ── R CMD build ───────────────────────────────────────────────────────────────── #>          checking for file 'C:\\Users\\steve\\AppData\\Local\\Temp\\Rtmps1W5T5\\remotes810226223e7\\spsanderson-tidyAML-80d6268/DESCRIPTION' ...  ✔  checking for file 'C:\\Users\\steve\\AppData\\Local\\Temp\\Rtmps1W5T5\\remotes810226223e7\\spsanderson-tidyAML-80d6268/DESCRIPTION' #>       ─  preparing 'tidyAML': (2.4s) #>    checking DESCRIPTION meta-information ...     checking DESCRIPTION meta-information ...   ✔  checking DESCRIPTION meta-information #>       ─  checking for LF line-endings in source and make files and shell scripts #>   ─  checking for empty or unneeded directories #>       ─  building 'tidyAML_0.0.2.9000.tar.gz' #>       #>"},{"path":"https://www.spsanderson.com/tidyaml/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Automatic Machine Learning with tidymodels","text":"Part reason use tidyAML can generate many models data set. One way modeling data set using regression numeric output. convienent function tidyAML generate set non-tuning models fast regression. Let’s take look . First let’s load library Now lets see function action. shown can easily select models want either choosing supported parsnip function like linear_reg() choose desired engine, can also use conjunction ! function also add class output. Let’s see . see two added classes, first fst_reg_spec_tbl creates set non-tuning regression models tidyaml_mod_spec_tbl model specification tibble built tidyAML Now, want create non-tuning model spec without using fast_regression_parsnip_spec_tbl() function. Well, can. function called create_model_spec(). Now reason . Let’s take look first function modeling tidyAML, fast_regression(). see , one models gracefully failed, thanks part function purrr::safely(), used make call safe_make functions. Let’s look fitted workflow predictions. Now let’s load multilevelmod library can run gee linear regression.","code":"library(tidyAML) #> Loading required package: parsnip #> Warning: package 'parsnip' was built under R version 4.2.3 #>  #> == Welcome to tidyAML =========================================================================== #> If you find this package useful, please leave a star:  #>    https://github.com/spsanderson/tidyAML' #>  #> If you encounter a bug or want to request an enhancement please file an issue at: #>    https://github.com/spsanderson/tidyAML/issues #>  #> It is suggested that you run tidymodels::tidymodel_prefer() to set the defaults for your session. #>  #> Thank you for using tidyAML! fast_regression_parsnip_spec_tbl(.parsnip_fns = \"linear_reg\") #> # A tibble: 11 × 5 #>    .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>        <int> <chr>           <chr>         <chr>        <list>     #>  1         1 lm              regression    linear_reg   <spec[+]>  #>  2         2 brulee          regression    linear_reg   <spec[+]>  #>  3         3 gee             regression    linear_reg   <spec[+]>  #>  4         4 glm             regression    linear_reg   <spec[+]>  #>  5         5 glmer           regression    linear_reg   <spec[+]>  #>  6         6 glmnet          regression    linear_reg   <spec[+]>  #>  7         7 gls             regression    linear_reg   <spec[+]>  #>  8         8 lme             regression    linear_reg   <spec[+]>  #>  9         9 lmer            regression    linear_reg   <spec[+]>  #> 10        10 stan            regression    linear_reg   <spec[+]>  #> 11        11 stan_glmer      regression    linear_reg   <spec[+]> fast_regression_parsnip_spec_tbl(.parsnip_eng = c(\"lm\",\"glm\")) #> # A tibble: 3 × 5 #>   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>       <int> <chr>           <chr>         <chr>        <list>     #> 1         1 lm              regression    linear_reg   <spec[+]>  #> 2         2 glm             regression    linear_reg   <spec[+]>  #> 3         3 glm             regression    poisson_reg  <spec[+]> fast_regression_parsnip_spec_tbl(.parsnip_eng = c(\"lm\",\"glm\",\"gee\"),                                   .parsnip_fns = \"linear_reg\") #> # A tibble: 3 × 5 #>   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>       <int> <chr>           <chr>         <chr>        <list>     #> 1         1 lm              regression    linear_reg   <spec[+]>  #> 2         2 gee             regression    linear_reg   <spec[+]>  #> 3         3 glm             regression    linear_reg   <spec[+]> class(fast_regression_parsnip_spec_tbl()) #> [1] \"tidyaml_mod_spec_tbl\" \"fst_reg_spec_tbl\"     \"tidyaml_base_tbl\"     #> [4] \"tbl_df\"               \"tbl\"                  \"data.frame\" create_model_spec(  .parsnip_eng = list(\"lm\",\"glm\",\"glmnet\",\"cubist\"),  .parsnip_fns = list(       \"linear_reg\",       \"linear_reg\",       \"linear_reg\",       \"cubist_rules\"      )  ) #> # A tibble: 4 × 4 #>   .parsnip_engine .parsnip_mode .parsnip_fns .model_spec #>   <chr>           <chr>         <chr>        <list>      #> 1 lm              regression    linear_reg   <spec[+]>   #> 2 glm             regression    linear_reg   <spec[+]>   #> 3 glmnet          regression    linear_reg   <spec[+]>   #> 4 cubist          regression    cubist_rules <spec[+]>  create_model_spec(  .parsnip_eng = list(\"lm\",\"glm\",\"glmnet\",\"cubist\"),  .parsnip_fns = list(       \"linear_reg\",       \"linear_reg\",       \"linear_reg\",       \"cubist_rules\"      ),  .return_tibble = FALSE  ) #> $.parsnip_engine #> $.parsnip_engine[[1]] #> [1] \"lm\" #>  #> $.parsnip_engine[[2]] #> [1] \"glm\" #>  #> $.parsnip_engine[[3]] #> [1] \"glmnet\" #>  #> $.parsnip_engine[[4]] #> [1] \"cubist\" #>  #>  #> $.parsnip_mode #> $.parsnip_mode[[1]] #> [1] \"regression\" #>  #>  #> $.parsnip_fns #> $.parsnip_fns[[1]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[2]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[3]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[4]] #> [1] \"cubist_rules\" #>  #>  #> $.model_spec #> $.model_spec[[1]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: lm  #>  #>  #> $.model_spec[[2]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: glm  #>  #>  #> $.model_spec[[3]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: glmnet  #>  #>  #> $.model_spec[[4]] #> ! parsnip could not locate an implementation for `cubist_rules` regression #>   model specifications using the `cubist` engine. #> Cubist Model Specification (regression) #>  #> Computational engine: cubist library(recipes) library(dplyr)  rec_obj <- recipe(mpg ~ ., data = mtcars) frt_tbl <- fast_regression(   .data = mtcars,    .rec_obj = rec_obj,    .parsnip_eng = c(\"lm\",\"glm\",\"gee\"),   .parsnip_fns = \"linear_reg\" )  glimpse(frt_tbl) #> Rows: 3 #> Columns: 8 #> $ .model_id       <int> 1, 2, 3 #> $ .parsnip_engine <chr> \"lm\", \"gee\", \"glm\" #> $ .parsnip_mode   <chr> \"regression\", \"regression\", \"regression\" #> $ .parsnip_fns    <chr> \"linear_reg\", \"linear_reg\", \"linear_reg\" #> $ model_spec      <list> [~NULL, ~NULL, NULL, regression, TRUE, NULL, lm, TRUE]… #> $ wflw            <list> [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp… #> $ fitted_wflw     <list> [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp… #> $ pred_wflw       <list> [<tbl_df[8 x 1]>], <NULL>, [<tbl_df[8 x 1]>] frt_tbl$pred_wflw #> [[1]] #> # A tibble: 8 × 1 #>   .pred #>   <dbl> #> 1  25.3 #> 2  24.9 #> 3  18.3 #> 4  22.0 #> 5  25.3 #> 6  18.7 #> 7  21.5 #> 8  14.5 #>  #> [[2]] #> NULL #>  #> [[3]] #> # A tibble: 8 × 1 #>   .pred #>   <dbl> #> 1  25.3 #> 2  24.9 #> 3  18.3 #> 4  22.0 #> 5  25.3 #> 6  18.7 #> 7  21.5 #> 8  14.5 library(multilevelmod) #> Warning: package 'multilevelmod' was built under R version 4.2.2  rec_obj <- recipe(mpg ~ ., data = mtcars) frt_tbl <- fast_regression(   .data = mtcars,    .rec_obj = rec_obj,    .parsnip_eng = c(\"lm\",\"glm\",\"gee\"),   .parsnip_fns = \"linear_reg\" ) #> Beginning Cgee S-function, @(#) geeformula.q 4.13 98/01/27 #> running glm to get initial regression estimate  frt_tbl$pred_wflw #> [[1]] #> # A tibble: 8 × 1 #>   .pred #>   <dbl> #> 1 21.8  #> 2 12.2  #> 3 11.5  #> 4  8.79 #> 5 32.3  #> 6 21.8  #> 7 16.9  #> 8 23.4  #>  #> [[2]] #> # A tibble: 8 × 1 #>   .pred #>   <dbl> #> 1 21.8  #> 2 11.9  #> 3 11.7  #> 4  8.81 #> 5 32.2  #> 6 23.3  #> 7 16.8  #> 8 21.3  #>  #> [[3]] #> # A tibble: 8 × 1 #>   .pred #>   <dbl> #> 1 21.8  #> 2 12.2  #> 3 11.5  #> 4  8.79 #> 5 32.3  #> 6 21.8  #> 7 16.9  #> 8 23.4"},{"path":"https://www.spsanderson.com/tidyaml/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Steven Paul Sanderson II, MPH Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/core_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to Install all Core Libraries — core_packages","title":"Functions to Install all Core Libraries — core_packages","text":"Lists core packages necessary run potential modeling algorithms.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/core_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to Install all Core Libraries — core_packages","text":"","code":"core_packages()"},{"path":"https://www.spsanderson.com/tidyaml/reference/core_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to Install all Core Libraries — core_packages","text":"character vector","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/core_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to Install all Core Libraries — core_packages","text":"Lists core packages necessary run potential modeling algorithms.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/core_packages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to Install all Core Libraries — core_packages","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/core_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to Install all Core Libraries — core_packages","text":"","code":"core_packages() #>  [1] \"multilevelmod\" \"rules\"         \"poissonreg\"    \"censored\"      #>  [5] \"baguette\"      \"bonsai\"        \"brulee\"        \"rstanarm\"      #>  [9] \"dbarts\"        \"kknn\"          \"ranger\"        \"randomForest\"  #> [13] \"LiblineaR\"     \"flexsurv\"      \"gee\"           \"glmnet\"        #> [17] \"discrim\"       \"klaR\"          \"kernlab\"       \"mda\"           #> [21] \"sda\"           \"sparsediscrim\" \"liquidSVM\""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_model_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Model Specification calls to parsnip — create_model_spec","title":"Generate Model Specification calls to parsnip — create_model_spec","text":"Creates list/tibble parsnip model specifications.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_model_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Model Specification calls to parsnip — create_model_spec","text":"","code":"create_model_spec(   .parsnip_eng = list(\"lm\"),   .mode = list(\"regression\"),   .parsnip_fns = list(\"linear_reg\"),   .return_tibble = TRUE )"},{"path":"https://www.spsanderson.com/tidyaml/reference/create_model_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Model Specification calls to parsnip — create_model_spec","text":".parsnip_eng input must list. default set . means parsnip linear regression engines used, example lm, glm. .mode input must list. default 'regression' .parsnip_fns input must list. default set . means parsnip linear regression functions used, example linear_reg(), cubist_rules. .return_tibble default TRUE. FALSE return list object.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_model_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Model Specification calls to parsnip — create_model_spec","text":"list tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_model_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Model Specification calls to parsnip — create_model_spec","text":"Creates list/tibble parsnip model specifications. function can generate list/tibble output model specification engine choose supported parsnip ecosystem.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/create_model_spec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Model Specification calls to parsnip — create_model_spec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_model_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Model Specification calls to parsnip — create_model_spec","text":"","code":"create_model_spec(  .parsnip_eng = list(\"lm\",\"glm\",\"glmnet\",\"cubist\"),  .parsnip_fns = list(       \"linear_reg\",\"linear_reg\",\"linear_reg\",       \"cubist_rules\"      )  ) #> # A tibble: 4 × 4 #>   .parsnip_engine .parsnip_mode .parsnip_fns .model_spec #>   <chr>           <chr>         <chr>        <list>      #> 1 lm              regression    linear_reg   <spec[+]>   #> 2 glm             regression    linear_reg   <spec[+]>   #> 3 glmnet          regression    linear_reg   <spec[+]>   #> 4 cubist          regression    cubist_rules <spec[+]>    create_model_spec(  .parsnip_eng = list(\"lm\",\"glm\",\"glmnet\",\"cubist\"),  .parsnip_fns = list(       \"linear_reg\",\"linear_reg\",\"linear_reg\",       \"cubist_rules\"      ),  .return_tibble = FALSE  ) #> $.parsnip_engine #> $.parsnip_engine[[1]] #> [1] \"lm\" #>  #> $.parsnip_engine[[2]] #> [1] \"glm\" #>  #> $.parsnip_engine[[3]] #> [1] \"glmnet\" #>  #> $.parsnip_engine[[4]] #> [1] \"cubist\" #>  #>  #> $.parsnip_mode #> $.parsnip_mode[[1]] #> [1] \"regression\" #>  #>  #> $.parsnip_fns #> $.parsnip_fns[[1]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[2]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[3]] #> [1] \"linear_reg\" #>  #> $.parsnip_fns[[4]] #> [1] \"cubist_rules\" #>  #>  #> $.model_spec #> $.model_spec[[1]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: lm  #>  #>  #> $.model_spec[[2]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: glm  #>  #>  #> $.model_spec[[3]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: glmnet  #>  #>  #> $.model_spec[[4]] #> ! parsnip could not locate an implementation for `cubist_rules` regression #>   model specifications using the `cubist` engine. #> Cubist Model Specification (regression) #>  #> Computational engine: cubist  #>  #>  #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/create_splits.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Create Splits Object — create_splits","title":"Utility Create Splits Object — create_splits","text":"Create splits object.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_splits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Create Splits Object — create_splits","text":"","code":"create_splits(.data, .split_type = \"initial_split\", .split_args = NULL)"},{"path":"https://www.spsanderson.com/tidyaml/reference/create_splits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Create Splits Object — create_splits","text":".data data passed make split .split_type default \"initial_split\", can pass split type rsample library. .split_args default NULL order use default split arguments. want pass arguments must pass list parameter name argument.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_splits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Create Splits Object — create_splits","text":"list object","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_splits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility Create Splits Object — create_splits","text":"Create splits object returns list object splits object splits type. function supports splits types rsample package.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/create_splits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility Create Splits Object — create_splits","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_splits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility Create Splits Object — create_splits","text":"","code":"create_splits(mtcars, .split_type = \"vfold_cv\") #> $splits #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [28/4]> Fold01 #>  2 <split [28/4]> Fold02 #>  3 <split [29/3]> Fold03 #>  4 <split [29/3]> Fold04 #>  5 <split [29/3]> Fold05 #>  6 <split [29/3]> Fold06 #>  7 <split [29/3]> Fold07 #>  8 <split [29/3]> Fold08 #>  9 <split [29/3]> Fold09 #> 10 <split [29/3]> Fold10 #>  #> $split_type #> [1] \"vfold_cv\" #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/create_workflow_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Workflow Set Object — create_workflow_set","title":"Create a Workflow Set Object — create_workflow_set","text":"Create workflow set object tibble model spec tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_workflow_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Workflow Set Object — create_workflow_set","text":"","code":"create_workflow_set(.model_tbl = NULL, .recipe_list = list(), .cross = TRUE)"},{"path":"https://www.spsanderson.com/tidyaml/reference/create_workflow_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Workflow Set Object — create_workflow_set","text":".model_tbl model table generated function like fast_regression_parsnip_spec_tbl(). model spec column grabbed automatically class object must tidyaml_base_tbl .recipe_list Provide list recipes get added workflow set object. .cross default TRUE, can set FALSE. passed cross parameter argument workflow_set() function.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_workflow_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Workflow Set Object — create_workflow_set","text":"list object workflows.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_workflow_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Workflow Set Object — create_workflow_set","text":"Create workflow set object/tibble model spec tibble object class type tidyaml_base_tbl. function take list recipes grab model specifications base tibble create workflow sets object. can also supply logical TRUE/FALSe .cross parameter gets passed corresponding parameter argumnt workflowsets::workflow_set() function.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/create_workflow_set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Workflow Set Object — create_workflow_set","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/create_workflow_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Workflow Set Object — create_workflow_set","text":"","code":"library(recipes) #> Warning: package 'recipes' was built under R version 4.2.3 #> Loading required package: dplyr #> Warning: package 'dplyr' was built under R version 4.2.3 #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #>  #> Attaching package: 'recipes' #> The following object is masked from 'package:stats': #>  #>     step  rec_obj <- recipe(mpg ~ ., data = mtcars) spec_tbl <- fast_regression_parsnip_spec_tbl(   .parsnip_fns = \"linear_reg\",   .parsnip_eng = c(\"lm\",\"glm\") )  create_workflow_set(   spec_tbl,   list(rec_obj) ) #> # A workflow set/tibble: 2 × 4 #>   wflow_id            info             option    result     #>   <chr>               <list>           <list>    <list>     #> 1 recipe_linear_reg_1 <tibble [1 × 4]> <opts[0]> <list [0]> #> 2 recipe_linear_reg_2 <tibble [1 × 4]> <opts[0]> <list [0]>"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_model_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract A Model Specification — extract_model_spec","title":"Extract A Model Specification — extract_model_spec","text":"Extract model specification tidyAML model tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_model_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract A Model Specification — extract_model_spec","text":"","code":"extract_model_spec(.data, .model_id = NULL)"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_model_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract A Model Specification — extract_model_spec","text":".data model table must class tidyaml_mod_spec_tbl. .model_id model number want select, Must integer sequence integers, ie. 1 c(1,3,5) 1:2","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_model_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract A Model Specification — extract_model_spec","text":"tibble chosen model specification(s).","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_model_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract A Model Specification — extract_model_spec","text":"function allows get model specification tibble class \"tidyaml_mod_spec_tbl\". allows select model .model_id column. can call model id's integer sequence integers.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_model_spec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract A Model Specification — extract_model_spec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_model_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract A Model Specification — extract_model_spec","text":"","code":"library(recipes)  rec_obj <- recipe(mpg ~ ., data = mtcars) spec_tbl <- fast_regression_parsnip_spec_tbl(   .parsnip_fns = \"linear_reg\",   .parsnip_eng = c(\"lm\",\"glm\") )  extract_model_spec(spec_tbl, 1) #> [[1]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: lm  #>  #>  extract_model_spec(spec_tbl, 1:2) #> [[1]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: lm  #>  #>  #> [[2]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: glm  #>  #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_regression_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Residuals from Fast Regression Models — extract_regression_residuals","title":"Extract Residuals from Fast Regression Models — extract_regression_residuals","text":"function extracts residuals fast regression model table (fast_regression()).","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_regression_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Residuals from Fast Regression Models — extract_regression_residuals","text":"","code":"extract_regression_residuals(.model_tbl)"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_regression_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Residuals from Fast Regression Models — extract_regression_residuals","text":".model_tbl fast regression model specification table (fst_reg_spec_tbl).","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_regression_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Residuals from Fast Regression Models — extract_regression_residuals","text":"function returns list data frames, containing residuals, actual values, predicted values specific model.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_regression_residuals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Residuals from Fast Regression Models — extract_regression_residuals","text":"function checks input model specification table inherits class 'fst_reg_spec_tbl' contains column 'pred_wflw'. manipulates data, grouping model, extracts residuals model. result list data frames, containing residuals, actual values, predicted values specific model.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_regression_residuals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Residuals from Fast Regression Models — extract_regression_residuals","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_regression_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Residuals from Fast Regression Models — extract_regression_residuals","text":"","code":"library(recipes, quietly = TRUE)  rec_obj <- recipe(mpg ~ ., data = mtcars)  fr_tbl <- fast_regression(mtcars, rec_obj, .parsnip_eng = c(\"lm\",\"glm\"), .parsnip_fns = \"linear_reg\") #> Error in dplyr::mutate(mod_fitted_tbl, pred_wflw = internal_make_wflw_predictions(mod_fitted_tbl,     splits_obj)): ℹ In argument: `pred_wflw = #>   internal_make_wflw_predictions(mod_fitted_tbl, splits_obj)`. #> Caused by error in `map2()`: #> ℹ In index: 1. #> Caused by error in `dplyr::filter()`: #> ! object 'rec_obj' not found  result <- extract_regression_residuals(fr_tbl) #> Error in extract_regression_residuals(fr_tbl): object 'fr_tbl' not found  head(result[[1]]) #> Error in head(result[[1]]): object 'result' not found"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract A Model Workflow — extract_wflw","title":"Extract A Model Workflow — extract_wflw","text":"Extract model workflow tidyAML model tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract A Model Workflow — extract_wflw","text":"","code":"extract_wflw(.data, .model_id = NULL)"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract A Model Workflow — extract_wflw","text":".data model table must class tidyaml_mod_spec_tbl. .model_id model number want select, Must integer sequence integers, ie. 1 c(1,3,5) 1:2","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract A Model Workflow — extract_wflw","text":"tibble chosen model workflow(s).","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract A Model Workflow — extract_wflw","text":"function allows get model workflow tibble class \"tidyaml_mod_spec_tbl\". allows select model .model_id column. can call model id's integer sequence integers.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract A Model Workflow — extract_wflw","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract A Model Workflow — extract_wflw","text":"","code":"library(recipes)  rec_obj <- recipe(mpg ~ ., data = mtcars) frt_tbl <- fast_regression(mtcars, rec_obj, .parsnip_eng = c(\"lm\",\"glm\"),                                            .parsnip_fns = \"linear_reg\") #> Error in dplyr::mutate(mod_fitted_tbl, pred_wflw = internal_make_wflw_predictions(mod_fitted_tbl,     splits_obj)): ℹ In argument: `pred_wflw = #>   internal_make_wflw_predictions(mod_fitted_tbl, splits_obj)`. #> Caused by error in `map2()`: #> ℹ In index: 1. #> Caused by error in `dplyr::filter()`: #> ! object 'rec_obj' not found  extract_wflw(frt_tbl, 1) #> Error in extract_wflw(frt_tbl, 1): object 'frt_tbl' not found extract_wflw(frt_tbl, 1:2) #> Error in extract_wflw(frt_tbl, 1:2): object 'frt_tbl' not found"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract A Model Fitted Workflow — extract_wflw_fit","title":"Extract A Model Fitted Workflow — extract_wflw_fit","text":"Extract model fitted workflow tidyAML model tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract A Model Fitted Workflow — extract_wflw_fit","text":"","code":"extract_wflw_fit(.data, .model_id = NULL)"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract A Model Fitted Workflow — extract_wflw_fit","text":".data model table must class tidyaml_mod_spec_tbl. .model_id model number want select, Must integer sequence integers, ie. 1 c(1,3,5) 1:2","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract A Model Fitted Workflow — extract_wflw_fit","text":"tibble chosen model workflow(s).","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract A Model Fitted Workflow — extract_wflw_fit","text":"function allows get model fitted workflow tibble class \"tidyaml_mod_spec_tbl\". allows select model .model_id column. can call model id's integer sequence integers.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract A Model Fitted Workflow — extract_wflw_fit","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract A Model Fitted Workflow — extract_wflw_fit","text":"","code":"library(recipes)  rec_obj <- recipe(mpg ~ ., data = mtcars) frt_tbl <- fast_regression(mtcars, rec_obj, .parsnip_eng = c(\"lm\",\"glm\"),                                            .parsnip_fns = \"linear_reg\") #> Error in dplyr::mutate(mod_fitted_tbl, pred_wflw = internal_make_wflw_predictions(mod_fitted_tbl,     splits_obj)): ℹ In argument: `pred_wflw = #>   internal_make_wflw_predictions(mod_fitted_tbl, splits_obj)`. #> Caused by error in `map2()`: #> ℹ In index: 1. #> Caused by error in `dplyr::filter()`: #> ! object 'rec_obj' not found  extract_wflw_fit(frt_tbl, 1) #> Error in extract_wflw_fit(frt_tbl, 1): object 'frt_tbl' not found extract_wflw_fit(frt_tbl, 1:2) #> Error in extract_wflw_fit(frt_tbl, 1:2): object 'frt_tbl' not found"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract A Model Workflow Predictions — extract_wflw_pred","title":"Extract A Model Workflow Predictions — extract_wflw_pred","text":"Extract model workflow predictions tidyAML model tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract A Model Workflow Predictions — extract_wflw_pred","text":"","code":"extract_wflw_pred(.data, .model_id = NULL)"},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract A Model Workflow Predictions — extract_wflw_pred","text":".data model table must class tidyaml_mod_spec_tbl. .model_id model number want select, Must integer sequence integers, ie. 1 c(1,3,5) 1:2","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract A Model Workflow Predictions — extract_wflw_pred","text":"tibble chosen model workflow(s).","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_pred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract A Model Workflow Predictions — extract_wflw_pred","text":"function allows get model workflow predictions tibble class \"tidyaml_mod_spec_tbl\". allows select model .model_id column. can call model id's integer sequence integers.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_pred.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract A Model Workflow Predictions — extract_wflw_pred","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/extract_wflw_pred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract A Model Workflow Predictions — extract_wflw_pred","text":"","code":"library(recipes)  rec_obj <- recipe(mpg ~ ., data = mtcars) frt_tbl <- fast_regression(mtcars, rec_obj, .parsnip_eng = c(\"lm\",\"glm\"),                                            .parsnip_fns = \"linear_reg\") #> Error in dplyr::mutate(mod_fitted_tbl, pred_wflw = internal_make_wflw_predictions(mod_fitted_tbl,     splits_obj)): ℹ In argument: `pred_wflw = #>   internal_make_wflw_predictions(mod_fitted_tbl, splits_obj)`. #> Caused by error in `map2()`: #> ℹ In index: 1. #> Caused by error in `dplyr::filter()`: #> ! object 'rec_obj' not found  extract_wflw_pred(frt_tbl, 1) #> Error in extract_wflw_pred(frt_tbl, 1): object 'frt_tbl' not found extract_wflw_pred(frt_tbl, 1:2) #> Error in extract_wflw_pred(frt_tbl, 1:2): object 'frt_tbl' not found"},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Model Specification calls to parsnip — fast_classification","title":"Generate Model Specification calls to parsnip — fast_classification","text":"Creates list/tibble parsnip model specifications.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Model Specification calls to parsnip — fast_classification","text":"","code":"fast_classification(   .data,   .rec_obj,   .parsnip_fns = \"all\",   .parsnip_eng = \"all\",   .split_type = \"initial_split\",   .split_args = NULL )"},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Model Specification calls to parsnip — fast_classification","text":".data data passed function classification problem .rec_obj recipe object passed. .parsnip_fns default '' create possible classification model specifications supported. .parsnip_eng default '' create possible classification model specifications supported. .split_type default 'initial_split', can pass type split supported rsample .split_args default NULL, NULL default parameters split type executed rsample split type.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Model Specification calls to parsnip — fast_classification","text":"list tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Model Specification calls to parsnip — fast_classification","text":"function can generate tibble output classification model specification fitted workflow object. Per recipes documentation explicitly step_string2factor() encouraged mutate predictor factor create recipe.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Model Specification calls to parsnip — fast_classification","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Model Specification calls to parsnip — fast_classification","text":"","code":"library(recipes) library(dplyr) library(tidyr)  df <- Titanic |>  as_tibble() |>  uncount(n) |>  mutate(across(everything(), as.factor))  rec_obj <- recipe(Survived ~ ., data = df)  fct_tbl <- fast_classification(   .data = df,   .rec_obj = rec_obj,   .parsnip_eng = c(\"glm\")) #> Error in dplyr::mutate(mod_fitted_tbl, pred_wflw = internal_make_wflw_predictions(mod_fitted_tbl,     splits_obj)): ℹ In argument: `pred_wflw = #>   internal_make_wflw_predictions(mod_fitted_tbl, splits_obj)`. #> Caused by error in `map2()`: #> ℹ In index: 1. #> Caused by error in `dplyr::filter()`: #> ! object 'rec_obj' not found  fct_tbl #> Error in eval(expr, envir, enclos): object 'fct_tbl' not found"},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification_parsnip_spec_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Classification call to parsnip — fast_classification_parsnip_spec_tbl","title":"Utility Classification call to parsnip — fast_classification_parsnip_spec_tbl","text":"Creates tibble parsnip classification model specifications.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification_parsnip_spec_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Classification call to parsnip — fast_classification_parsnip_spec_tbl","text":"","code":"fast_classification_parsnip_spec_tbl(   .parsnip_fns = \"all\",   .parsnip_eng = \"all\" )"},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification_parsnip_spec_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Classification call to parsnip — fast_classification_parsnip_spec_tbl","text":".parsnip_fns default set . means parsnip classification functions used, example bag_mars(), bart(). can also choose pass c() vector like c(\"barg_mars\",\"bart\") .parsnip_eng default set . means parsnip classification engines used, example earth, dbarts. can also choose pass c() vector like c('earth', 'dbarts')","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification_parsnip_spec_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Classification call to parsnip — fast_classification_parsnip_spec_tbl","text":"tibble added class 'fst_class_spec_tbl'","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification_parsnip_spec_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility Classification call to parsnip — fast_classification_parsnip_spec_tbl","text":"Creates tibble parsnip classification model specifications. create tibble 32 different classification model specifications can filtered. model specs created first filtered . create models classification problems. find supported models package can visit https://www.tidymodels.org/find/parsnip/","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification_parsnip_spec_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility Classification call to parsnip — fast_classification_parsnip_spec_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_classification_parsnip_spec_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility Classification call to parsnip — fast_classification_parsnip_spec_tbl","text":"","code":"fast_classification_parsnip_spec_tbl(.parsnip_fns = \"logistic_reg\") #> # A tibble: 6 × 5 #>   .model_id .parsnip_engine .parsnip_mode  .parsnip_fns model_spec #>       <int> <chr>           <chr>          <chr>        <list>     #> 1         1 brulee          classification logistic_reg <spec[+]>  #> 2         2 gee             classification logistic_reg <spec[+]>  #> 3         3 glm             classification logistic_reg <spec[+]>  #> 4         4 glmer           classification logistic_reg <spec[+]>  #> 5         5 glmnet          classification logistic_reg <spec[+]>  #> 6         6 LiblineaR       classification logistic_reg <spec[+]>  fast_classification_parsnip_spec_tbl(.parsnip_eng = c(\"earth\",\"dbarts\")) #> # A tibble: 4 × 5 #>   .model_id .parsnip_engine .parsnip_mode  .parsnip_fns     model_spec #>       <int> <chr>           <chr>          <chr>            <list>     #> 1         1 earth           classification bag_mars         <spec[+]>  #> 2         2 earth           classification discrim_flexible <spec[+]>  #> 3         3 dbarts          classification bart             <spec[+]>  #> 4         4 earth           classification mars             <spec[+]>"},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Model Specification calls to parsnip — fast_regression","title":"Generate Model Specification calls to parsnip — fast_regression","text":"Creates list/tibble parsnip model specifications.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Model Specification calls to parsnip — fast_regression","text":"","code":"fast_regression(   .data,   .rec_obj,   .parsnip_fns = \"all\",   .parsnip_eng = \"all\",   .split_type = \"initial_split\",   .split_args = NULL )"},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Model Specification calls to parsnip — fast_regression","text":".data data passed function regression problem .rec_obj recipe object passed. .parsnip_fns default '' create possible regression model specifications supported. .parsnip_eng default '' create possible regression model specifications supported. .split_type default 'initial_split', can pass type split supported rsample .split_args default NULL, NULL default parameters split type executed rsample split type.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Model Specification calls to parsnip — fast_regression","text":"list tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Model Specification calls to parsnip — fast_regression","text":"function can generate tibble output regression model specification fitted workflow object.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Model Specification calls to parsnip — fast_regression","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Model Specification calls to parsnip — fast_regression","text":"","code":"library(recipes, quietly = TRUE)  rec_obj <- recipe(mpg ~ ., data = mtcars) frt_tbl <- fast_regression(mtcars, rec_obj, .parsnip_eng = c(\"lm\",\"glm\"), .parsnip_fns = \"linear_reg\") #> Error in dplyr::mutate(mod_fitted_tbl, pred_wflw = internal_make_wflw_predictions(mod_fitted_tbl,     splits_obj)): ℹ In argument: `pred_wflw = #>   internal_make_wflw_predictions(mod_fitted_tbl, splits_obj)`. #> Caused by error in `map2()`: #> ℹ In index: 1. #> Caused by error in `dplyr::filter()`: #> ! object 'rec_obj' not found  frt_tbl #> Error in eval(expr, envir, enclos): object 'frt_tbl' not found"},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression_parsnip_spec_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Regression call to parsnip — fast_regression_parsnip_spec_tbl","title":"Utility Regression call to parsnip — fast_regression_parsnip_spec_tbl","text":"Creates tibble parsnip regression model specifications.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression_parsnip_spec_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Regression call to parsnip — fast_regression_parsnip_spec_tbl","text":"","code":"fast_regression_parsnip_spec_tbl(.parsnip_fns = \"all\", .parsnip_eng = \"all\")"},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression_parsnip_spec_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Regression call to parsnip — fast_regression_parsnip_spec_tbl","text":".parsnip_fns default set . means parsnip linear regression functions used, example linear_reg(), cubist_rules. can also choose pass c() vector like c(\"linear_reg\",\"cubist_rules\") .parsnip_eng default set . means parsnip linear regression engines used, example lm, glm. can also choose pass c() vector like c('lm', 'glm')","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression_parsnip_spec_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Regression call to parsnip — fast_regression_parsnip_spec_tbl","text":"tibble added class 'fst_reg_spec_tbl'","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression_parsnip_spec_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility Regression call to parsnip — fast_regression_parsnip_spec_tbl","text":"Creates tibble parsnip regression model specifications. create tibble 46 different regression model specifications can filtered. model specs created first filtered . create models regression problems. find supported models package can visit https://www.tidymodels.org/find/parsnip/","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression_parsnip_spec_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility Regression call to parsnip — fast_regression_parsnip_spec_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/fast_regression_parsnip_spec_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility Regression call to parsnip — fast_regression_parsnip_spec_tbl","text":"","code":"fast_regression_parsnip_spec_tbl(.parsnip_fns = \"linear_reg\") #> # A tibble: 11 × 5 #>    .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>        <int> <chr>           <chr>         <chr>        <list>     #>  1         1 lm              regression    linear_reg   <spec[+]>  #>  2         2 brulee          regression    linear_reg   <spec[+]>  #>  3         3 gee             regression    linear_reg   <spec[+]>  #>  4         4 glm             regression    linear_reg   <spec[+]>  #>  5         5 glmer           regression    linear_reg   <spec[+]>  #>  6         6 glmnet          regression    linear_reg   <spec[+]>  #>  7         7 gls             regression    linear_reg   <spec[+]>  #>  8         8 lme             regression    linear_reg   <spec[+]>  #>  9         9 lmer            regression    linear_reg   <spec[+]>  #> 10        10 stan            regression    linear_reg   <spec[+]>  #> 11        11 stan_glmer      regression    linear_reg   <spec[+]>  fast_regression_parsnip_spec_tbl(.parsnip_eng = c(\"lm\",\"glm\")) #> # A tibble: 3 × 5 #>   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>       <int> <chr>           <chr>         <chr>        <list>     #> 1         1 lm              regression    linear_reg   <spec[+]>  #> 2         2 glm             regression    linear_reg   <spec[+]>  #> 3         3 glm             regression    poisson_reg  <spec[+]>"},{"path":"https://www.spsanderson.com/tidyaml/reference/full_internal_make_wflw.html","id":null,"dir":"Reference","previous_headings":"","what":"Full Internal Workflow for Model and Recipe — full_internal_make_wflw","title":"Full Internal Workflow for Model and Recipe — full_internal_make_wflw","text":"function creates full internal workflow model recipe combination.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/full_internal_make_wflw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full Internal Workflow for Model and Recipe — full_internal_make_wflw","text":"","code":"full_internal_make_wflw(.model_tbl, .rec_obj)"},{"path":"https://www.spsanderson.com/tidyaml/reference/full_internal_make_wflw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full Internal Workflow for Model and Recipe — full_internal_make_wflw","text":".model_tbl model specification table (tidyaml_mod_spec_tbl). .rec_obj recipe object.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/full_internal_make_wflw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full Internal Workflow for Model and Recipe — full_internal_make_wflw","text":"function returns workflow object first model-recipe pair based internal function selected.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/full_internal_make_wflw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full Internal Workflow for Model and Recipe — full_internal_make_wflw","text":"function checks input model specification table inherits class 'tidyaml_mod_spec_tbl'. manipulates input table, making adjustments factors creating list grouped models. model-recipe pair, uses appropriate internal function based model type create workflow object. specific internal function selected using switch statement based class model.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/full_internal_make_wflw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Full Internal Workflow for Model and Recipe — full_internal_make_wflw","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/full_internal_make_wflw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full Internal Workflow for Model and Recipe — full_internal_make_wflw","text":"","code":"library(dplyr) library(recipes)  rec_obj <- recipe(mpg ~ ., data = mtcars)  mod_tbl <- make_regression_base_tbl() mod_tbl <- mod_tbl |>   filter(     .parsnip_engine %in% c(\"lm\", \"glm\") &     .parsnip_fns == \"linear_reg\"     ) class(mod_tbl) <- c(\"tidyaml_mod_spec_tbl\", class(mod_tbl)) mod_spec_tbl <- internal_make_spec_tbl(mod_tbl) result <- full_internal_make_wflw(mod_spec_tbl, rec_obj) result #> [[1]] #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Linear Regression Model Specification (regression) #>  #> Computational engine: lm  #>  #>  #> [[2]] #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Linear Regression Model Specification (regression) #>  #> Computational engine: glm  #>  #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/get_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Model — get_model","title":"Get a Model — get_model","text":"Get model tidyAML model tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/get_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Model — get_model","text":"","code":"get_model(.data, .model_id = NULL)"},{"path":"https://www.spsanderson.com/tidyaml/reference/get_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Model — get_model","text":".data model table must class tidyaml_mod_spec_tbl. .model_id model number want select, Must integer sequence integers, ie. 1 c(1,3,5) 1:2","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/get_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Model — get_model","text":"tibble chosen models.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/get_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a Model — get_model","text":"function allows get model models tibble class \"tidyaml_mod_spec_tbl\". allows select model .model_id column. can call model id's integer sequence integers.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/get_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get a Model — get_model","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/get_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Model — get_model","text":"","code":"library(recipes)  rec_obj <- recipe(mpg ~ ., data = mtcars) spec_tbl <- fast_regression_parsnip_spec_tbl(   .parsnip_fns = \"linear_reg\",   .parsnip_eng = c(\"lm\",\"glm\") )  get_model(spec_tbl, 1) #> # A tibble: 1 × 5 #>   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>       <int> <chr>           <chr>         <chr>        <list>     #> 1         1 lm              regression    linear_reg   <spec[+]>  get_model(spec_tbl, 1:2) #> # A tibble: 2 × 5 #>   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>       <int> <chr>           <chr>         <chr>        <list>     #> 1         1 lm              regression    linear_reg   <spec[+]>  #> 2         2 glm             regression    linear_reg   <spec[+]>"},{"path":"https://www.spsanderson.com/tidyaml/reference/install_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to Install all Core Libraries — install_deps","title":"Functions to Install all Core Libraries — install_deps","text":"Installs dependencies core_packages() function.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/install_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to Install all Core Libraries — install_deps","text":"","code":"install_deps()"},{"path":"https://www.spsanderson.com/tidyaml/reference/install_deps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to Install all Core Libraries — install_deps","text":"return value, called side effects","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/install_deps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to Install all Core Libraries — install_deps","text":"Installs dependencies core_packages() function.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/install_deps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to Install all Core Libraries — install_deps","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/install_deps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to Install all Core Libraries — install_deps","text":"","code":"if (FALSE) {   install_deps() }"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_fitted_wflw.html","id":null,"dir":"Reference","previous_headings":"","what":"Internals Safely Make a Fitted Workflow from Model Spec tibble — internal_make_fitted_wflw","title":"Internals Safely Make a Fitted Workflow from Model Spec tibble — internal_make_fitted_wflw","text":"Safely Make fitted workflow model spec tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_fitted_wflw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internals Safely Make a Fitted Workflow from Model Spec tibble — internal_make_fitted_wflw","text":"","code":"internal_make_fitted_wflw(.model_tbl, .splits_obj)"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_fitted_wflw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internals Safely Make a Fitted Workflow from Model Spec tibble — internal_make_fitted_wflw","text":".model_tbl model table generated function like fast_regression_parsnip_spec_tbl(), must class \"tidyaml_mod_spec_tbl\". meant used function internal_make_wflw() run tibble saved. .splits_obj splits object auto_ml function. internal auto_ml_ function.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_fitted_wflw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internals Safely Make a Fitted Workflow from Model Spec tibble — internal_make_fitted_wflw","text":"list object workflows.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_fitted_wflw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internals Safely Make a Fitted Workflow from Model Spec tibble — internal_make_fitted_wflw","text":"Create fitted parnsip model workflow object.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_fitted_wflw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internals Safely Make a Fitted Workflow from Model Spec tibble — internal_make_fitted_wflw","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_fitted_wflw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internals Safely Make a Fitted Workflow from Model Spec tibble — internal_make_fitted_wflw","text":"","code":"library(recipes, quietly = TRUE)  mod_spec_tbl <- fast_regression_parsnip_spec_tbl(   .parsnip_eng = c(\"lm\",\"glm\"),   .parsnip_fns = \"linear_reg\" )  rec_obj <- recipe(mpg ~ ., data = mtcars) splits_obj <- create_splits(mtcars, \"initial_split\")  mod_tbl <- mod_spec_tbl |>   mutate(wflw = full_internal_make_wflw(mod_spec_tbl, rec_obj))  internal_make_fitted_wflw(mod_tbl, splits_obj) #> [[1]] #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> stats::lm(formula = ..y ~ ., data = data) #>  #> Coefficients: #> (Intercept)          cyl         disp           hp         drat           wt   #>    17.41739     -0.10861      0.02008     -0.02858     -1.18243     -5.62114   #>        qsec           vs           am         gear         carb   #>     1.17516      0.58111      2.49600      0.58807      0.33557   #>  #>  #> [[2]] #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call:  stats::glm(formula = ..y ~ ., family = stats::gaussian, data = data) #>  #> Coefficients: #> (Intercept)          cyl         disp           hp         drat           wt   #>    17.41739     -0.10861      0.02008     -0.02858     -1.18243     -5.62114   #>        qsec           vs           am         gear         carb   #>     1.17516      0.58111      2.49600      0.58807      0.33557   #>  #> Degrees of Freedom: 23 Total (i.e. Null);  13 Residual #> Null Deviance:\t    930.6  #> Residual Deviance: 103.1 \tAIC: 127.1 #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_spec_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Internals Make a Model Spec tibble — internal_make_spec_tbl","title":"Internals Make a Model Spec tibble — internal_make_spec_tbl","text":"Make Model Spec tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_spec_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internals Make a Model Spec tibble — internal_make_spec_tbl","text":"","code":"internal_make_spec_tbl(.model_tbl)"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_spec_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internals Make a Model Spec tibble — internal_make_spec_tbl","text":".model_tbl data coming inside regression/classification parsnip spec functions.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_spec_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internals Make a Model Spec tibble — internal_make_spec_tbl","text":"model spec tbl.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_spec_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internals Make a Model Spec tibble — internal_make_spec_tbl","text":"Make Model Spec tibble.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_spec_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internals Make a Model Spec tibble — internal_make_spec_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_spec_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internals Make a Model Spec tibble — internal_make_spec_tbl","text":"","code":"make_regression_base_tbl() |>   internal_make_spec_tbl() #> # A tibble: 39 × 5 #>    .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec #>        <int> <chr>           <chr>         <chr>        <list>     #>  1         1 lm              regression    linear_reg   <spec[+]>  #>  2         2 brulee          regression    linear_reg   <spec[+]>  #>  3         3 gee             regression    linear_reg   <spec[+]>  #>  4         4 glm             regression    linear_reg   <spec[+]>  #>  5         5 glmer           regression    linear_reg   <spec[+]>  #>  6         6 glmnet          regression    linear_reg   <spec[+]>  #>  7         7 gls             regression    linear_reg   <spec[+]>  #>  8         8 lme             regression    linear_reg   <spec[+]>  #>  9         9 lmer            regression    linear_reg   <spec[+]>  #> 10        10 stan            regression    linear_reg   <spec[+]>  #> # ℹ 29 more rows  make_classification_base_tbl() |>   internal_make_spec_tbl() #> # A tibble: 31 × 5 #>    .model_id .parsnip_engine .parsnip_mode  .parsnip_fns        model_spec #>        <int> <chr>           <chr>          <chr>               <list>     #>  1         1 earth           classification bag_mars            <spec[+]>  #>  2         2 earth           classification discrim_flexible    <spec[+]>  #>  3         3 dbarts          classification bart                <spec[+]>  #>  4         4 MASS            classification discrim_linear      <spec[+]>  #>  5         5 mda             classification discrim_linear      <spec[+]>  #>  6         6 sda             classification discrim_linear      <spec[+]>  #>  7         7 sparsediscrim   classification discrim_linear      <spec[+]>  #>  8         8 MASS            classification discrim_quad        <spec[+]>  #>  9         9 sparsediscrim   classification discrim_quad        <spec[+]>  #> 10        10 klaR            classification discrim_regularized <spec[+]>  #> # ℹ 21 more rows"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw.html","id":null,"dir":"Reference","previous_headings":"","what":"Internals Safely Make Workflow from Model Spec tibble — internal_make_wflw","title":"Internals Safely Make Workflow from Model Spec tibble — internal_make_wflw","text":"Safely Make workflow model spec tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internals Safely Make Workflow from Model Spec tibble — internal_make_wflw","text":"","code":"internal_make_wflw(.model_tbl, .rec_obj)"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internals Safely Make Workflow from Model Spec tibble — internal_make_wflw","text":".model_tbl model table generated function like fast_regression_parsnip_spec_tbl(), must class \"tidyaml_mod_spec_tbl\". .rec_obj recipe object going used make workflow object.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internals Safely Make Workflow from Model Spec tibble — internal_make_wflw","text":"list object workflows.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internals Safely Make Workflow from Model Spec tibble — internal_make_wflw","text":"Create model specification tibble workflows::workflow() list column.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internals Safely Make Workflow from Model Spec tibble — internal_make_wflw","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internals Safely Make Workflow from Model Spec tibble — internal_make_wflw","text":"","code":"library(recipes, quietly = TRUE)  mod_spec_tbl <- fast_regression_parsnip_spec_tbl(   .parsnip_eng = c(\"lm\",\"glm\",\"gee\"),   .parsnip_fns = \"linear_reg\" )  rec_obj <- recipe(mpg ~ ., data = mtcars)  internal_make_wflw(mod_spec_tbl, rec_obj) #> [[1]] #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Linear Regression Model Specification (regression) #>  #> Computational engine: lm  #>  #>  #> [[2]] #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Linear Regression Model Specification (regression) #>  #> Computational engine: gee  #>  #>  #> [[3]] #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Linear Regression Model Specification (regression) #>  #> Computational engine: glm  #>  #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_gee_lin_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Internals Safely Make Workflow for GEE Linear Regression — internal_make_wflw_gee_lin_reg","title":"Internals Safely Make Workflow for GEE Linear Regression — internal_make_wflw_gee_lin_reg","text":"Safely Make workflow model spec tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_gee_lin_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internals Safely Make Workflow for GEE Linear Regression — internal_make_wflw_gee_lin_reg","text":"","code":"internal_make_wflw_gee_lin_reg(.model_tbl, .rec_obj)"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_gee_lin_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internals Safely Make Workflow for GEE Linear Regression — internal_make_wflw_gee_lin_reg","text":".model_tbl model table generated function like fast_regression_parsnip_spec_tbl(), must class \"tidyaml_mod_spec_tbl\". .rec_obj recipe object going used make workflow object.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_gee_lin_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internals Safely Make Workflow for GEE Linear Regression — internal_make_wflw_gee_lin_reg","text":"list object workflows.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_gee_lin_reg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internals Safely Make Workflow for GEE Linear Regression — internal_make_wflw_gee_lin_reg","text":"Create model specification tibble workflows::workflow() list column.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_gee_lin_reg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internals Safely Make Workflow for GEE Linear Regression — internal_make_wflw_gee_lin_reg","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_gee_lin_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internals Safely Make Workflow for GEE Linear Regression — internal_make_wflw_gee_lin_reg","text":"","code":"library(dplyr) library(recipes) library(multilevelmod) #> Warning: package 'multilevelmod' was built under R version 4.2.2  mod_tbl <- make_regression_base_tbl() mod_tbl <- mod_tbl |>   filter(   .parsnip_engine %in% c(\"gee\") &   .parsnip_fns == \"linear_reg\"   )  class(mod_tbl) <- c(\"tidyaml_mod_spec_tbl\", class(mod_tbl)) mod_spec_tbl <- internal_make_spec_tbl(mod_tbl) rec_obj <- recipe(mpg ~ ., data = mtcars)  internal_make_wflw_gee_lin_reg(mod_spec_tbl, rec_obj) #> [[1]] #> ══ Workflow ════════════════════════════════════════════════════════════════════ #> Preprocessor: Variables #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> Outcomes: outcome_var #> Predictors: predictor_vars #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #> Linear Regression Model Specification (regression) #>  #> Computational engine: gee  #>  #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Internals Safely Make Predictions on a Fitted Workflow from Model Spec tibble — internal_make_wflw_predictions","title":"Internals Safely Make Predictions on a Fitted Workflow from Model Spec tibble — internal_make_wflw_predictions","text":"Safely Make predictions fitted workflow model spec tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internals Safely Make Predictions on a Fitted Workflow from Model Spec tibble — internal_make_wflw_predictions","text":"","code":"internal_make_wflw_predictions(.model_tbl, .splits_obj)"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internals Safely Make Predictions on a Fitted Workflow from Model Spec tibble — internal_make_wflw_predictions","text":".model_tbl model table generated function like fast_regression_parsnip_spec_tbl(), must class \"tidyaml_mod_spec_tbl\". meant used function internal_make_fitted_wflw() run tibble saved. .splits_obj splits object auto_ml function. internal auto_ml_ function.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internals Safely Make Predictions on a Fitted Workflow from Model Spec tibble — internal_make_wflw_predictions","text":"list object tibble outcome variable values along testing training predictions single tibble.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_predictions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internals Safely Make Predictions on a Fitted Workflow from Model Spec tibble — internal_make_wflw_predictions","text":"Create predictions fitted parnsip model workflow object.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_predictions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internals Safely Make Predictions on a Fitted Workflow from Model Spec tibble — internal_make_wflw_predictions","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_make_wflw_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internals Safely Make Predictions on a Fitted Workflow from Model Spec tibble — internal_make_wflw_predictions","text":"","code":"library(recipes, quietly = TRUE)  mod_spec_tbl <- fast_regression_parsnip_spec_tbl(   .parsnip_eng = c(\"lm\",\"glm\"),   .parsnip_fns = \"linear_reg\" )  rec_obj <- recipe(mpg ~ ., data = mtcars) splits_obj <- create_splits(mtcars, \"initial_split\")  mod_tbl <- mod_spec_tbl |>   mutate(wflw = full_internal_make_wflw(mod_spec_tbl, rec_obj))  mod_fitted_tbl <- mod_tbl |>   mutate(fitted_wflw = internal_make_fitted_wflw(mod_tbl, splits_obj))  internal_make_wflw_predictions(mod_fitted_tbl, splits_obj) #> Error in map2(.x, vec_index(.x), .f, ...): ℹ In index: 1. #> Caused by error in `dplyr::filter()`: #> ! object 'rec_obj' not found"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_set_args_to_tune.html","id":null,"dir":"Reference","previous_headings":"","what":"Internals Make a Tunable Model Specification — internal_set_args_to_tune","title":"Internals Make a Tunable Model Specification — internal_set_args_to_tune","text":"Make tuned model specification object.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_set_args_to_tune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internals Make a Tunable Model Specification — internal_set_args_to_tune","text":"","code":"internal_set_args_to_tune(.model_tbl)"},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_set_args_to_tune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internals Make a Tunable Model Specification — internal_set_args_to_tune","text":".model_tbl model table generated function like fast_regression_parsnip_spec_tbl(), must class \"tidyaml_mod_spec_tbl\".","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_set_args_to_tune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internals Make a Tunable Model Specification — internal_set_args_to_tune","text":"list object workflows.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_set_args_to_tune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internals Make a Tunable Model Specification — internal_set_args_to_tune","text":"take model specification created function like fast_regression_parsnip_spec_tbl() update model_spec args tune::tune(). done dynamically, meaning need know names parameters inside model specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_set_args_to_tune.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internals Make a Tunable Model Specification — internal_set_args_to_tune","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/internal_set_args_to_tune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internals Make a Tunable Model Specification — internal_set_args_to_tune","text":"","code":"library(dplyr)  mod_tbl <- fast_regression_parsnip_spec_tbl() mod_tbl$model_spec[[1]] #> Linear Regression Model Specification (regression) #>  #> Computational engine: lm  #>   updated_mod_tbl <- mod_tbl |>   mutate(model_spec = internal_set_args_to_tune(mod_tbl)) updated_mod_tbl$model_spec[[1]] #> Linear Regression Model Specification (regression) #>  #> Main Arguments: #>   penalty = tune::tune() #>   mixture = tune::tune() #>  #> Computational engine: lm  #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/load_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to Install all Core Libraries — load_deps","title":"Functions to Install all Core Libraries — load_deps","text":"Load core packages necessary run potential modeling algorithms.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/load_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to Install all Core Libraries — load_deps","text":"","code":"load_deps()"},{"path":"https://www.spsanderson.com/tidyaml/reference/load_deps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to Install all Core Libraries — load_deps","text":"return value, called side effects","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/load_deps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to Install all Core Libraries — load_deps","text":"Load core packages necessary run potential modeling algorithms.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/load_deps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to Install all Core Libraries — load_deps","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/load_deps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to Install all Core Libraries — load_deps","text":"","code":"if (FALSE) { load_deps() }"},{"path":"https://www.spsanderson.com/tidyaml/reference/make_classification_base_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Internals Make Base Classification Tibble — make_classification_base_tbl","title":"Internals Make Base Classification Tibble — make_classification_base_tbl","text":"Creates base tibble create parsnip classification model specifications.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/make_classification_base_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internals Make Base Classification Tibble — make_classification_base_tbl","text":"","code":"make_classification_base_tbl()"},{"path":"https://www.spsanderson.com/tidyaml/reference/make_classification_base_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internals Make Base Classification Tibble — make_classification_base_tbl","text":"tibble","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/make_classification_base_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internals Make Base Classification Tibble — make_classification_base_tbl","text":"Creates base tibble create parsnip classification model specifications.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/make_classification_base_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internals Make Base Classification Tibble — make_classification_base_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/make_classification_base_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internals Make Base Classification Tibble — make_classification_base_tbl","text":"","code":"make_classification_base_tbl() #> # A tibble: 31 × 3 #>    .parsnip_engine .parsnip_mode  .parsnip_fns        #>    <chr>           <chr>          <chr>               #>  1 earth           classification bag_mars            #>  2 earth           classification discrim_flexible    #>  3 dbarts          classification bart                #>  4 MASS            classification discrim_linear      #>  5 mda             classification discrim_linear      #>  6 sda             classification discrim_linear      #>  7 sparsediscrim   classification discrim_linear      #>  8 MASS            classification discrim_quad        #>  9 sparsediscrim   classification discrim_quad        #> 10 klaR            classification discrim_regularized #> # ℹ 21 more rows"},{"path":"https://www.spsanderson.com/tidyaml/reference/make_regression_base_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Internals Make Base Regression Tibble — make_regression_base_tbl","title":"Internals Make Base Regression Tibble — make_regression_base_tbl","text":"Creates base tibble create parsnip regression model specifications.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/make_regression_base_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internals Make Base Regression Tibble — make_regression_base_tbl","text":"","code":"make_regression_base_tbl()"},{"path":"https://www.spsanderson.com/tidyaml/reference/make_regression_base_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internals Make Base Regression Tibble — make_regression_base_tbl","text":"tibble","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/make_regression_base_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internals Make Base Regression Tibble — make_regression_base_tbl","text":"Creates base tibble create parsnip regression model specifications.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/make_regression_base_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internals Make Base Regression Tibble — make_regression_base_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/make_regression_base_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internals Make Base Regression Tibble — make_regression_base_tbl","text":"","code":"make_regression_base_tbl() #> # A tibble: 39 × 3 #>    .parsnip_engine .parsnip_mode .parsnip_fns #>    <chr>           <chr>         <chr>        #>  1 lm              regression    linear_reg   #>  2 brulee          regression    linear_reg   #>  3 gee             regression    linear_reg   #>  4 glm             regression    linear_reg   #>  5 glmer           regression    linear_reg   #>  6 glmnet          regression    linear_reg   #>  7 gls             regression    linear_reg   #>  8 lme             regression    linear_reg   #>  9 lmer            regression    linear_reg   #> 10 stan            regression    linear_reg   #> # ℹ 29 more rows"},{"path":"https://www.spsanderson.com/tidyaml/reference/match_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Match function arguments — match_args","title":"Match function arguments — match_args","text":"Match functions arguments.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/match_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match function arguments — match_args","text":"","code":"match_args(f, args)"},{"path":"https://www.spsanderson.com/tidyaml/reference/match_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match function arguments — match_args","text":"f parsnip function \"linear_reg\" string without parentheses. args arguments want supply f","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/match_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match function arguments — match_args","text":"list matched arguments.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/match_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match function arguments — match_args","text":"Match functions arguments, bad ones passed rejected remaining passing ones returned.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/reference/match_args.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Match function arguments — match_args","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/match_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match function arguments — match_args","text":"","code":"match_args(   f = \"linear_reg\",   args = list(     mode = \"regression\",     engine = \"lm\",     trees = 1,     mtry = 1    )  ) #> bad arguments passed: trees #> bad arguments passed: mtry #> $mode #> [1] \"regression\" #>  #> $engine #> [1] \"lm\" #>"},{"path":"https://www.spsanderson.com/tidyaml/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://www.spsanderson.com/tidyaml/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://www.spsanderson.com/tidyaml/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {    data %>%      group_by(...) %>%      summarise(mean = mean({{ var }}))  } my_function <- function(data, var, ...) {    # Defuse    var <- enquo(var)    dots <- enquos(...)      # Inject    data %>%      group_by(!!!dots) %>%      summarise(mean = mean(!!var))  } my_var <- \"disp\"  mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {    # Use `{{` to tunnel function arguments and the usual glue    # operator `{` to interpolate plain strings.    data %>%      summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }}))  } my_function <- function(data, var, suffix = \"foo\") {    var <- enquo(var)    prefix <- as_label(var)    data %>%      summarise(\"{prefix}_mean_{suffix}\" := mean(!!var))  }"},{"path":"https://www.spsanderson.com/tidyaml/reference/tidyeval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy eval helpers — tidyeval","text":"return value, called side effects","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"breaking-changes-development-version","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"tidyAML (development version)","text":"None","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New Features","title":"tidyAML (development version)","text":"Fix #187 - Add function extract_regression_residuals()","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"minor-fixes-and-improvements-development-version","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"tidyAML (development version)","text":"discrim mda sda sparsediscrim liquidSVM kernlab klaR actual data training predictions testing predictions","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"tidyaml-003","dir":"Changelog","previous_headings":"","what":"tidyAML 0.0.3","title":"tidyAML 0.0.3","text":"CRAN release: 2023-11-29","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"breaking-changes-0-0-3","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"tidyAML 0.0.3","text":"Fix #150 - Require R version >= 4.1.0 order use native pipe. Fix #170 - Drop magrittr Imports DESCRIPTION file #150.","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"new-features-0-0-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"tidyAML 0.0.3","text":"Fix #157 - internal_make_spec_tbl() now adds class model_spec created parsnip, example, gee engine setting using linear_reg() return extra class gee_linear_reg Fix #175 - Add Getting Started Vignette.","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"minor-fixes-and-improvements-0-0-3","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"tidyAML 0.0.3","text":"Fix #142 - Add gee, glmnet, rules core_packages() function. Fix #148 - Update create_model_spec() Fix #155 - Add class tidyaml_base_tbl output create_model_spec() Fix #156 - Update internal_set_args_to_tune() use dplyr::pick() instead dplyr::cur_data() since deprecated. Fix #161 - Update internal_set_args_to_tune() use !names(new_mod_args) instead !names(.) Fix #163 - Add attribute model spec drop class #155 Fix #147 - Add packages suggests, necessary pkg work. Fix #139 - Add suggestion startup message run tidymodels::tidymodels_prefer() Fix #167 - Add function internal_make_wflw_gee_lin_reg() Fix #168 - Add function full_internal_make_wflw Fix #169 - Update fast_classification() fast_regression() use full_internal_make_wflw()","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"tidyaml-002","dir":"Changelog","previous_headings":"","what":"tidyAML 0.0.2","title":"tidyAML 0.0.2","text":"CRAN release: 2023-04-20","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"breaking-changes-0-0-2","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"tidyAML 0.0.2","text":"None","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"new-features-0-0-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"tidyAML 0.0.2","text":"Fix #129 - Add ability extract model spec create_model_spec() function.","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"minor-fixes-and-improvements-0-0-2","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"tidyAML 0.0.2","text":"Fix #130 - Add checks create_model_spec() Fix #127 - Fix internal_make_wflw_predictions() use recipes::testing() instead recipes::training()","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"tidyaml-001","dir":"Changelog","previous_headings":"","what":"tidyAML 0.0.1","title":"tidyAML 0.0.1","text":"CRAN release: 2023-02-16","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"breaking-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"tidyAML 0.0.1","text":"None","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"tidyAML 0.0.1","text":"Fix #73 - Add function make_regression_base_tbl() Fix #74 - Add function make_classification_base_tbl() Fix #77 - Add function internal_make_spec_tbl() Fix #78 - Add function internal_set_args_to_tune() Fix #16 - Add function create_workflow_set() Fix #101 - Add function get_model() Fix #102 - Add function extract_model_spec() Fix #103 - Add function extract_wflw() Fix #104 - Add function extract_wflw_fit() Fix #105 - Add function extract_wflw_pred() Fix #71 - Add function match_args()","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"minor-fixes-and-improvements-0-0-1","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"tidyAML 0.0.1","text":"Fix #72 - Update fast_classification_parsnip_spec_tbl() fast_regression_parsnip_spec_tbl() use make_regression make_classification functions. Fix #79 #80 - Update fast_classification_parsnip_spec_tbl() fast_regression_parsnip_spec_tbl() use internal_make_spec_tbl() function. Fix #85 - also addresses sub tasks #86 #87 #88 make base table functions class use class internal_make_spec_tbl() Fix #99 - Update DESCRIPTION R >= 3.4.0","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"new-features-0-0-0-9002","dir":"Changelog","previous_headings":"","what":"New Features","title":"tidyAML 0.0.0.9002","text":"Fix #62 - Add function fast_classification_parsnip_spec_tbl() Fix #65 - Add function fast_classification()","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"breaking-changes-0-0-0-9002","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"tidyAML 0.0.0.9002","text":"None","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"minor-fixes-and-improvements-0-0-0-9002","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"tidyAML 0.0.0.9002","text":"None","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"new-features-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"New Features","title":"tidyAML 0.0.0.9001","text":"Fix #48 - Add functions core_packages() install_deps(), load_deps()","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"breaking-changes-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"tidyAML 0.0.0.9001","text":"None","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"minor-fixes-and-improvements-0-0-0-9001","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"tidyAML 0.0.0.9001","text":"None","code":""},{"path":[]},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"new-features-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"New Features","title":"tidyAML 0.0.0.9000","text":"Fix #5 - Add function fast_regression_parsnip_spec_tbl() Fix #6 - Add function create_splits() Fix #7 - Add function fast_regression() Fix #11 - Add function create_model_spec() Fix #30, #31, 32 - Add internal functions internal_make_wflw(), internal_make_fitted_wflw(), internal_make_wflw_predictions()","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"breaking-changes-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"tidyAML 0.0.0.9000","text":"None","code":""},{"path":"https://www.spsanderson.com/tidyaml/news/index.html","id":"minor-fixes-and-improvements-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"tidyAML 0.0.0.9000","text":"None Added NEWS.md file track changes package.","code":""}]
